# -*- coding: utf-8 -*-
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import proto  # type: ignore

from google.protobuf import field_mask_pb2  # type: ignore


__protobuf__ = proto.module(
    package="google.cloud.baremetalsolution.v2",
    manifest={
        "NfsShare",
        "GetNfsShareRequest",
        "ListNfsSharesRequest",
        "ListNfsSharesResponse",
        "UpdateNfsShareRequest",
    },
)


class NfsShare(proto.Message):
    r"""An NFS share.

    Attributes:
        name (str):
            Output only. The name of the NFS share.
        nfs_share_id (str):
            Output only. An identifier for the NFS share,
            generated by the backend.
        state (google.cloud.bare_metal_solution_v2.types.NfsShare.State):
            The state of the NFS share.
        volume (str):
            The volume containing the share.
        allowed_clients (Sequence[google.cloud.bare_metal_solution_v2.types.NfsShare.AllowedClient]):
            List of allowed access points.
        labels (Mapping[str, str]):
            Labels as key value pairs.
    """

    class State(proto.Enum):
        r"""The possible states for this NFS share."""
        STATE_UNSPECIFIED = 0
        PROVISIONED = 1

    class MountPermissions(proto.Enum):
        r"""The possible mount permissions."""
        MOUNT_PERMISSIONS_UNSPECIFIED = 0
        READ = 1
        READ_WRITE = 2

    class AllowedClient(proto.Message):
        r"""Represents an 'access point' for the share.

        Attributes:
            network (str):
                The network the access point sits on.
            share_ip (str):
                The IP address of the share on this network.
            allowed_clients_cidr (str):
                The subnet of IP addresses permitted to
                access the share.
            mount_permissions (google.cloud.bare_metal_solution_v2.types.NfsShare.MountPermissions):
                Mount permissions.
            allow_dev (bool):
                Allow dev flag.  Which controls whether to
                allow creation of devices.
            allow_suid (bool):
                Allow the setuid flag.
            no_root_squash (bool):
                Disable root squashing, which is a feature of
                NFS. Root squash is a special mapping of the
                remote superuser (root) identity when using
                identity authentication.
        """

        network = proto.Field(
            proto.STRING,
            number=1,
        )
        share_ip = proto.Field(
            proto.STRING,
            number=2,
        )
        allowed_clients_cidr = proto.Field(
            proto.STRING,
            number=3,
        )
        mount_permissions = proto.Field(
            proto.ENUM,
            number=4,
            enum="NfsShare.MountPermissions",
        )
        allow_dev = proto.Field(
            proto.BOOL,
            number=5,
        )
        allow_suid = proto.Field(
            proto.BOOL,
            number=6,
        )
        no_root_squash = proto.Field(
            proto.BOOL,
            number=7,
        )

    name = proto.Field(
        proto.STRING,
        number=1,
    )
    nfs_share_id = proto.Field(
        proto.STRING,
        number=2,
    )
    state = proto.Field(
        proto.ENUM,
        number=3,
        enum=State,
    )
    volume = proto.Field(
        proto.STRING,
        number=4,
    )
    allowed_clients = proto.RepeatedField(
        proto.MESSAGE,
        number=5,
        message=AllowedClient,
    )
    labels = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=6,
    )


class GetNfsShareRequest(proto.Message):
    r"""Message for requesting NFS share information.

    Attributes:
        name (str):
            Required. Name of the resource.
    """

    name = proto.Field(
        proto.STRING,
        number=1,
    )


class ListNfsSharesRequest(proto.Message):
    r"""Message for requesting a list of NFS shares.

    Attributes:
        parent (str):
            Required. Parent value for
            ListNfsSharesRequest.
        page_size (int):
            Requested page size. The server might return
            fewer items than requested. If unspecified,
            server will pick an appropriate default.
        page_token (str):
            A token identifying a page of results from
            the server.
        filter (str):
            List filter.
    """

    parent = proto.Field(
        proto.STRING,
        number=1,
    )
    page_size = proto.Field(
        proto.INT32,
        number=2,
    )
    page_token = proto.Field(
        proto.STRING,
        number=3,
    )
    filter = proto.Field(
        proto.STRING,
        number=4,
    )


class ListNfsSharesResponse(proto.Message):
    r"""Response message containing the list of NFS shares.

    Attributes:
        nfs_shares (Sequence[google.cloud.bare_metal_solution_v2.types.NfsShare]):
            The list of NFS shares.
        next_page_token (str):
            A token identifying a page of results from
            the server.
        unreachable (Sequence[str]):
            Locations that could not be reached.
    """

    @property
    def raw_page(self):
        return self

    nfs_shares = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="NfsShare",
    )
    next_page_token = proto.Field(
        proto.STRING,
        number=2,
    )
    unreachable = proto.RepeatedField(
        proto.STRING,
        number=3,
    )


class UpdateNfsShareRequest(proto.Message):
    r"""Message requesting to updating a NFS share.

    Attributes:
        nfs_share (google.cloud.bare_metal_solution_v2.types.NfsShare):
            Required. The NFS share to update.

            The ``name`` field is used to identify the NFS share to
            update. Format:
            projects/{project}/locations/{location}/nfsShares/{nfs_share}
        update_mask (google.protobuf.field_mask_pb2.FieldMask):
            The list of fields to update. The only currently supported
            fields are: ``labels``
    """

    nfs_share = proto.Field(
        proto.MESSAGE,
        number=1,
        message="NfsShare",
    )
    update_mask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
